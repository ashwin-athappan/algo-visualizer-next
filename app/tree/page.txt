import Link from "next/link";

import localFont from "next/font/local";
import Image from "next/image";

import arrow_white from "@/public/img/arrow_white.png";
import arrow_white_right from "@/public/img/arrow_white_right.png";
import go_to_beginning from "@/public/img/goToBeginning.png";
import prev_frame from "@/public/img/prevFrame.png";
import pause_img from "@/public/img/pause.png";
import play_img from "@/public/img/play.png";
import next_frame from "@/public/img/nextFrame.png";
import go_to_end from "@/public/img/goToEnd.png";


import {
    inOrderTraversal,
    findMin,
    findMax,
    searchVertex,
    insertVertex,
    removeVertex,
    goToBeginning,
    stepBackward,
    pause,
    play,
    stepForward,
    goToEnd,
} from "@/app/_utils/tree/bst";

const silkScreen = localFont({
    src: "../fonts/silkscreen/slkscr-webfont.woff",
    variable: "--font-silk-screen",
});

export default function Tree() {
    return (
        <>
            <div id="top-bar">
                <a id="home" href="/">we<span className="colour">need</span>a<span
                    className="colour">name</span></a>
                <span id="title">
    	<a id="title-BST">Binary Search Tree</a>&nbsp&nbsp
        <a id="title-AVL" className="selected-viz">AVL Tree</a>
    </span>
                <a id="fb-login" href="#" target="_blank">Facebook connect</a>
                <span id="trick">

    </span>
                <div id="mode-menu">
                    <div id="mode-button">Exploration Mode<Image src={arrow_white} alt="arrow white"/></div>
                    <div id="other-modes">
                        <a href="#">Tutorial Mode</a>
                    </div>
                </div>
            </div>

            <div id="viz"></div>


            <div id="current-action" className="panel"><p></p></div>

            <div id="actions" className="panel">
                <p id="search">Search</p>
                <p id="insert">Insert</p>
                <p id="remove">Remove</p>
                <p id="inorder" className="execAction" onClick={inOrderTraversal}>In-order Traversal</p>
            </div>
            <div id="actions-hide" className="panel-hide">
                <Image src={arrow_white_right} alt="arrow_white_right" title="show/hide actions panel"/>
            </div>
            <div id="actions-extras">

                <div id="find-min" className="execAction" style={{whiteSpace: "nowrap"}} onClick={findMin}><p>Find
                    Min</p></div>
                <div id="find-max" className="execAction" style={{whiteSpace: "nowrap"}} onClick={findMax}><p>Find
                    Max</p></div>
                <div id="search-input"><input type="text" id="v-search" title="Enter an integer" autoComplete="off"
                                              value={5}/></div>
                <div id="search-go" className="execAction" onClick={searchVertex}><p>GO</p></div>
                <div id="search-err" className="err"></div>
                <div id="insert-input"><input type="text" id="v-insert"
                                              title="Enter an integer or comma-separated array of integers"
                                              autoComplete="off"
                                              value={20}/></div>
                <div id="insert-go" className="execAction" onClick={insertVertex}><p>GO</p></div>
                <div id="insert-err" className="err"></div>
                <div id="remove-input"><input type="text" id="v-remove"
                                              title="Enter an integer or comma-separated array of integers"
                                              autoComplete="off"
                                              value={23}/></div>
                <div id="remove-go" className="execAction" onClick={removeVertex}><p>GO</p></div>
                <div id="remove-err" className="err"></div>
                <div id="inorder-err" className="err"></div>
            </div>

            <div id="status" className="panel"><p></p></div>
            <div id="status-hide" className="panel-hide">
                <Image src={arrow_white_right} alt="arrow_white_right" title="show/hide status panel"/>
            </div>

            <div id="codetrace" className="panel">
                <p id="code1" className="p-[10px]"></p>
                <p id="code2"></p>
                <p id="code3"></p>
                <p id="code4"></p>
                <p id="code5"></p>
                <p id="code6"></p>
                <p id="code7" className="pb-[10px]"></p>
            </div>
            <div id="codetrace-hide" className="panel-hide">
                <Image src={arrow_white_right} alt="arrow_white_right" title="show/hide codetrace panel"/>
            </div>

            <div id="left-bar"></div>
            <div id="right-bar"></div>

            <div id="bottom-bar">
                <a id="trigger-about">About</a>
                <a id="trigger-team">Team</a>
                <a id="trigger-terms">Terms of use</a>
            </div>

            <div id="media-controls">
                <div id="speed-control">slow
                    <div id="speed-input"></div>
                    fast
                </div>
                <span id="go-to-beginning" className="media-control-button" title="go to beginning"
                      onClick={goToBeginning}>
                    <Image src={go_to_beginning} alt="go to beginning"/>
                </span>
                <span id="previous" className="media-control-button" title="step backward" onClick={stepBackward}>
                    <Image src={prev_frame} alt="prev frame"/>
                </span>
                <span id="pause" className="media-control-button" title="pause" onClick={pause}>
                    <Image src={pause_img} alt="pause"/>
                </span>
                <span id="play" className="media-control-button" title="play" onClick={play}>
                    <Image src={play_img} alt="play"/>
                </span>
                <span id="next" className="media-control-button" title="step forward" onClick={stepForward}>
                    <Image src={next_frame} alt="next frame"/>
                </span>
                <span id="go-to-end" className="media-control-button" title="go to end" onClick={goToEnd}>
                    <Image src={go_to_end} alt="go to end"/>
                </span>
                <div id="progress-bar" className="media-control-button"></div>
            </div>

            <div id="dark-overlay"></div>
            <div id="about" className="overlays"></div>
            <div id="team" className="overlays"></div>
            <div id="termsofuse" className="overlays"></div>

            <div id="bst-tutorial-1" className="tutorial-dialog">
                A Binary Search Tree (BST) is a tree in which each node has only 2 children. A node's left child (if
                existent)
                must hold a value smaller than its own, and its right child (if existent) must hold a value larger than
                its own.
                An AVL tree is a self-balancing BST.
                <div className="tutorial-next">Next<Image src={arrow_white_right} alt="arrow white right"/></div>
            </div>
            <div id="bst-tutorial-2" className="tutorial-dialog">
                To toggle between the standard Binary Search Tree and the AVL Tree, select the respective header.
                <div className="tutorial-next">Next<Image src={arrow_white_right} alt="arrow white right"/></div>
            </div>
            <div id="bst-tutorial-3" className="tutorial-dialog">
                All available operations on the BST/AVL Tree will be shown here. Select an action and provide the
                necessary
                input, and the action will be animated in the visualisation area.
                <div className="tutorial-next">Next<Image src={arrow_white_right} alt="arrow white right"/></div>
            </div>
            <div id="bst-tutorial-4" className="tutorial-dialog">
                View the visualisation here!
                <div className="tutorial-next">Next<Image src={arrow_white_right} alt="arrow white right"/></div>
            </div>
            <div id="bst-tutorial-5" className="tutorial-dialog">
                As the action is being carried out, each step will be described in the status panel.
                <div className="tutorial-next">Next<Image src={arrow_white_right} alt="arrow white right"/></div>
            </div>
            <div id="bst-tutorial-6" className="tutorial-dialog">
                You can also follow the psuedocode highlights to trace the algorithm.
                <div className="tutorial-next">Next<Image src={arrow_white_right} alt="arrow white right"/></div>
            </div>
            <div id="bst-tutorial-7" className="tutorial-dialog">
                Control the animation with the player controls! Keyboard shortcuts are:<br/>
                <div className="mt-[8px]"><strong>Spacebar:</strong> play/pause/replay</div>
                <strong>Left/right arrows:</strong> step backward/step forward<br/>
                <strong>-/+:</strong> decrease/increase speed<br/>
                <div className="tutorial-next">Next<Image src={arrow_white_right} alt="arrow white right"/></div>
            </div>
            <div id="bst-tutorial-8" className="tutorial-dialog">
                Return to "Exploration Mode" to start exploring!
            </div>
        </>
    )
        ;
}